{"version":3,"sources":["actions/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","reducers/todo.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","Link","active","children","onClick","disabled","style","marginLeft","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Footer","FilterLink","input","onSubmit","e","text","preventDefault","value","trim","id","ref","node","Todo","completed","textDecoration","TodoList","todos","toggleTodo","map","todo","key","getVisibleTodos","t","Error","App","VisibleTodoList","action","combineReducers","store","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7cfa6a5.chunk.js","sourcesContent":["let nextTodoId = 0;\nexport const addTodo = (text) => ({\n  type: \"ADD_TODO\",\n  id: nextTodoId++,\n  text,\n});\n\nexport const setVisibilityFilter = (filter) => ({\n  type: \"SET_VISIBILITY_FILTER\",\n  filter,\n});\n\nexport const toggleTodo = (id) => ({\n  type: \"TOGGLE_TODO\",\n  id,\n});\n\nexport const VisibilityFilters = {\n  SHOW_ALL: \"SHOW_ALL\",\n  SHOW_COMPLETED: \"SHOW_COMPLETED\",\n  SHOW_ACTIVE: \"SHOW_ACTIVE\",\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => (\n  <button\n    onClick={onClick}\n    disabled={active}\n    style={{\n      marginLeft: '4px'\n    }}\n  >\n    {children}\n  </button>\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link)","import React from 'react'\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../actions'\n\nconst Footer = () => (\n  <div>\n    <span>Show: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n  </div>\n)\n\nexport default Footer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions'\n\nconst AddTodo = ({ dispatch }) => {\n  let input\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          if (!input.value.trim()) {\n            return\n          }\n          dispatch(addTodo(input.value))\n          input.value = ''\n        }}\n      >\n        <input ref={node => (input = node)} />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  )\n}\n\nexport default connect()(AddTodo)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Todo = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? 'line-through' : 'none'\n    }}\n  >\n    {text}\n  </li>\n)\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Todo","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, toggleTodo }) => (\n  <ul>\n    {todos.map(todo => (\n      <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\n    ))}\n  </ul>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList","import { connect } from 'react-redux'\nimport { toggleTodo } from '../actions'\nimport TodoList from '../components/TodoList'\nimport { VisibilityFilters } from '../actions'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)","import React from 'react'\nimport Footer from './Footer'\nimport AddTodo from '../containers/AddTodo'\nimport VisibleTodoList from '../containers/VisibleTodoList'\n\nconst App = () => (\n  <div>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </div>\n)\n\nexport default App","const todos = (state = [], action) => {\n    switch (action.type) {\n      case 'ADD_TODO':\n        return [\n          ...state,\n          {\n            id: action.id,\n            text: action.text,\n            completed: false\n          }\n        ]\n      case 'TOGGLE_TODO':\n        return state.map(todo =>\n          todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n        )\n      default:\n        return state\n    }\n  }\n  \n  export default todos","import { VisibilityFilters } from '../actions/index'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter","import { combineReducers } from \"redux\";\nimport todos from \"./todo\";\nimport visibilityFilter from \"./visibilityFilter\";\n\nexport default combineReducers({\n  todos,\n  visibilityFilter,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './reducers/index';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}